version: '3'

services:
    pgsql:
        image: postgres
        restart: always
        volumes:
            - "./.data/db:/var/lib/postgresql/data"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DATABASE}
    pgadmin:
        image: dpage/pgadmin4
        restart: always
        ports:
            - 8097:80
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    postgrest:
        image: postgrest/postgrest
        ports:
            - "3000:3000"
        links:
            - pgsql:pgsql
        environment:
            PGRST_DB_URI: postgres://postgres:${POSTGRES_PASSWORD}@pgsql:5432/${POSTGRES_DATABASE}
            PGRST_DB_SCHEMA: public
            PGRST_DB_ANON_ROLE: postgres #In production this role should not be the same as the one used for the connection
            PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
        depends_on:
            - pgsql
    swagger:
        image: swaggerapi/swagger-ui
        ports:
            - "8096:8080"
        expose:
            - "8096"
        environment:
            API_URL: http://localhost:3000/
    php:
        build:
            context: php7-fpm
            args:
                TIMEZONE: ${TIMEZONE}
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
            - ./logs/symfony:/var/www/symfony/var/log
    yarn:
        image: node
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
        ports:
            - 9099:9000
        working_dir: /var/www/symfony
        #command: ["yarn", "install"]
        command: ["yarn", "dev-server", "--host=0.0.0.0"]
    nginx:
        build: nginx
        ports:
            - 8099:80
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
            - ./logs/nginx/:/var/log/nginx
